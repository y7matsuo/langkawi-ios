///
/// @Generated by Mockolo
///



import UIKit


class AccountUseCaseMock: AccountUseCase {
    init() { }


    private(set) var fetchUserCallCount = 0
    var fetchUserHandler: ((Int) -> ())?
    func fetchUser(userId: Int)  {
        fetchUserCallCount += 1
        if let fetchUserHandler = fetchUserHandler {
            fetchUserHandler(userId)
        }
        
    }

    private(set) var fetchAvatorCallCount = 0
    var fetchAvatorHandler: ((Int) -> ())?
    func fetchAvator(userId: Int)  {
        fetchAvatorCallCount += 1
        if let fetchAvatorHandler = fetchAvatorHandler {
            fetchAvatorHandler(userId)
        }
        
    }

    private(set) var getUserIdCallCount = 0
    var getUserIdHandler: (() -> (Int?))?
    func getUserId() -> Int? {
        getUserIdCallCount += 1
        if let getUserIdHandler = getUserIdHandler {
            return getUserIdHandler()
        }
        return nil
    }
}

class AccountInteractorOutputMock: AccountInteractorOutput {
    init() { }


    private(set) var onFetchUserCallCount = 0
    var onFetchUserHandler: ((User) -> ())?
    func onFetchUser(user: User)  {
        onFetchUserCallCount += 1
        if let onFetchUserHandler = onFetchUserHandler {
            onFetchUserHandler(user)
        }
        
    }

    private(set) var onFetchAvatorCallCount = 0
    var onFetchAvatorHandler: ((UIImage) -> ())?
    func onFetchAvator(image: UIImage)  {
        onFetchAvatorCallCount += 1
        if let onFetchAvatorHandler = onFetchAvatorHandler {
            onFetchAvatorHandler(image)
        }
        
    }

    private(set) var onErrorCallCount = 0
    var onErrorHandler: ((Error) -> ())?
    func onError(error: Error)  {
        onErrorCallCount += 1
        if let onErrorHandler = onErrorHandler {
            onErrorHandler(error)
        }
        
    }
}

class AccountPresentationMock: AccountPresentation {
    init() { }


    private(set) var fetchAccountCallCount = 0
    var fetchAccountHandler: (() -> ())?
    func fetchAccount()  {
        fetchAccountCallCount += 1
        if let fetchAccountHandler = fetchAccountHandler {
            fetchAccountHandler()
        }
        
    }

    private(set) var showEditNameCallCount = 0
    var showEditNameHandler: (() -> ())?
    func showEditName()  {
        showEditNameCallCount += 1
        if let showEditNameHandler = showEditNameHandler {
            showEditNameHandler()
        }
        
    }

    private(set) var showEditDescriptionCallCount = 0
    var showEditDescriptionHandler: (() -> ())?
    func showEditDescription()  {
        showEditDescriptionCallCount += 1
        if let showEditDescriptionHandler = showEditDescriptionHandler {
            showEditDescriptionHandler()
        }
        
    }
}

class AccountWireframeMock: AccountWireframe {
    init() { }


    static private(set) var assembleCallCount = 0
    static var assembleHandler: (() -> (AccountViewController))?
    static func assemble() -> AccountViewController {
        assembleCallCount += 1
        if let assembleHandler = assembleHandler {
            return assembleHandler()
        }
        fatalError("assembleHandler returns can't have a default value thus its handler must be set")
    }

    private(set) var presentEditNameCallCount = 0
    var presentEditNameHandler: (() -> ())?
    func presentEditName()  {
        presentEditNameCallCount += 1
        if let presentEditNameHandler = presentEditNameHandler {
            presentEditNameHandler()
        }
        
    }

    private(set) var presentEditDescriptionCallCount = 0
    var presentEditDescriptionHandler: (() -> ())?
    func presentEditDescription()  {
        presentEditDescriptionCallCount += 1
        if let presentEditDescriptionHandler = presentEditDescriptionHandler {
            presentEditDescriptionHandler()
        }
        
    }
}

class AccountViewProtocolMock: AccountViewProtocol {
    init() { }


}

